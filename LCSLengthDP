/**
 * Find the length of longest commin subsequence, Leetcode: 1143, all test cases passed 
 **/
 
 class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int T[][] = new int [text1.length()+1][text2.length()+1];
        int i, j, m = text1.length(), n = text2.length();
        for(int[] row : T) {
            Arrays.fill(row, -1);
        }
        for(i=0; i<m+1; i++) {
            T[i][0] = 0;
        }
        for(j=0; j<n+1; j++) {
            T[0][j] = 0;
        }

        for(i = 1; i < m+1; i++) {
            for(j = 1; j < n+1; j++) {
                if (T[i][j] == -1) {
                    if(text1.charAt(i-1) == text2.charAt(j-1)) {
                        T[i][j] = 1 + T[i-1][j-1]; 
                    }
                    else {
                        T[i][j] = Math.max(T[i-1][j], T[i][j-1]);
                    }
                }
            }        
        }
        return T[i-1][j-1];
    }
}
