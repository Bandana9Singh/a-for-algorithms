/**
 * Leetcode DP question: 494,
 * 96 / 140 testcases passed
 **/
class Solution {
    public int findTargetSumWays(int[] nums, int target) {
        int sum = 0, sumOfSubset1=0, i, j, n = nums.length;
        for(i = 0; i < n; i++) {
            sum = sum + nums[i];
        }
        sumOfSubset1 = (target + sum +1)/2;
        int T[][] = new int [n+1][sumOfSubset1+1];
        for (j = 0; j < sumOfSubset1+1; j++) {
            T[0][j] = 0;
        }
        for (i = 0; i < n+1; i++) {
            T[i][0] = 1;
        }

        for(i = 1; i < n+1; i++) {
            for(j = 1; j< sumOfSubset1+1; j++) {
                if (nums[i-1] <= j) {
                    T[i][j] = T[i-1][j-nums[i-1]] + T[i-1][j];
                } else {
                    T[i][j] = T[i-1][j];
                }
            }
        }
        return T[n][sumOfSubset1];
    }
}
